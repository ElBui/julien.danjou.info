---
title: "A retrospective of the OpenStack Telemetry project Newton cycle"
created: !!timestamp '2016-09-05 13:20:00'
image: /media/images/blog/2016/map.jpg
tags:
    - OpenStack
    - Ceilometer
    - Gnocchi
    - Aodh
---

{% block excerpt %}
{% mark excerpt %}

A few weeks ago, I recorded an interview with Krishnan Raghuram about what was
discussed for this development cycle for OpenStack Telemetry.

{% endmark %}
{% endblock %}


<iframe width="560" height="315" class="illustration"
src="https://www.youtube.com/embed/9strfD484JQ" frameborder="0"
allowfullscreen></iframe>


It's interesting to look back at this video more than 3 months after recording
it, and see what actually happened to Telemetry. It turns out that some of the
things that I think were going to happen did not happen yet. As the first
release candidate version is approaching, it's very unlikely they happen.

And on the other side, some new fancy features arrived suddenly without me
having a clue about them.

As far as **Ceilometer** is concerned, here's the list of what really happened
in terms of user features:

- Added full support for SNMP v3 USM model
- Added support for batch measurement in Gnocchi dispatcher
- Set ended_at timestamp in Gnocchi dispatcher
- Allow Swift pollster to specify regions
- Add L3 cache usage and memory bandwidth meters
- Split out the event code (REST API and storage) to a new **Panko** project

And a few other minor things. I planned none of them except Panko (which I was
responsible for), and the ones we planned (documentation update, pipeline
rework and polling enhancement) did not happen yet.

For **Aodh**, we expected to rework the documentation entirely too, and that
did not happen either. What we did instead:

- Deprecate and disable combination alarms
- Add pagination support in REST API
- Deprecated all non-SQL database store and provide a tool to migrate
- Support batch notification for aodh-notifier

It's definitely a good list of new features for Aodh, still small, but
simplifying it, removing technical debt and continuing building momentum around
it.

For **Gnocchi**, we really had no plan, except maybe a few small features
(they're usually tracked in the Launchpad bug list). It turned out we had some
fancy new idea with Gordon Chung on how to boost our storage engine, so we work
on that. That kept us busy a few weeks in the end, though the preliminary
results look tremendous â€“ so it was definitely worth it. We also have a AWS S3
storage driver on its way.

I find this exercise interesting, as it really emphasizes how you can't really
control what's happening in any open source project, where your contributors
come and go and work on their own agenda.

That does not mean we're dropping the themes and ideas I've laid out in that
video. We're still pushing our "documentation is mandatory" policy and
improving our "work by default" scenario. It's just a longer road that we
expected.

{# Local Variables: #}
{# mode: markdown #}
{# End: #}
